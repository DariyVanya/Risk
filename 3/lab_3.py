import math

start_cap = 100_000  # Початковий капітал
p = 0.4              # Ймовірність отримати 150 000
perc = 1.5           # Прибуток 50% (збільшення капіталу до 150%)

# Функція для безризикового варіанту
def a_(start_cap):
    return start_cap * 1.15  # 15% прибуток

# Функція для сподіваної корисності
def L(x_, p, x):
    # Визначаємо корисність відповідно до функції U(x) = 2*sqrt(x)
    u_high = 2 * math.sqrt(x_)  # Корисність для варіанту з прибутком 50%
    u_low = 2 * math.sqrt(x)    # Корисність для варіанту з поверненням 100 000

    # Сподівана корисність
    expected_utility = p * u_high + (1 - p) * u_low
    return expected_utility

# Функція для ризикованого варіанту
def b_(start_cap, p, perc):
    # Виграш за ризикованим варіантом
    x_high = start_cap * perc
    x_low = start_cap

    # Обчислення сподіваної корисності
    l = L(x_high, p, x_low)

    # Детермінований еквівалент: U(дет. еквівалент) = сподівана корисність
    x = (l / 2) ** 2  # Виводимо детермінований еквівалент із функції U(x) = 2*sqrt(x)

    # Середній виграш (математичне очікування)
    x_module = (x_high * p + x_low * (1 - p))

    # Премія за ризик
    pi = x_module - x
    return pi, x_module, x

# Головна функція
def main():
    # Безризиковий варіант
    fixed_income = a_(start_cap)
    print(f"Гарантований дохід у банку: {fixed_income:.2f} доларів")

    # Ризикований варіант
    pi, expected_return, det_eq = b_(start_cap, p, perc)
    print(f"Сподіваний дохід у ризикованій інвестиції: {expected_return:.2f} доларів")
    print(f"Детермінований еквівалент: {det_eq:.2f} доларів")
    print(f"Премія за ризик: {pi:.2f} доларів")

main()
